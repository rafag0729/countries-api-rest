{"version":3,"sources":["context/ThemeContext.js","components/Header.js","components/Nav.js","hook/useForm.js","components/helpers/findingCountries.js","components/CountrySmall.js","data/countriesCodes.js","components/helpers/preparingSpecs.js","components/AllCountries.js","components/CountryDetail.js","CountriesApp.js","index.js"],"names":["ThemeContext","createContext","Header","useContext","lightMode","setLightMode","body","document","querySelector","className","to","onClick","classList","toggle","Nav","countriesList","setCountries","initialState","useState","formValues","setFormValues","target","name","value","useForm","searchText","searchContinent","handleInputChange","useEffect","filter","country","includes","findingCountryBySearchInput","toLowerCase","region","findingCountryBySelectInput","type","placeholder","autoComplete","onChange","CountrySmall","flag","population","capital","alt","src","countries","preparingSpecs","data","map","nativeName","subregion","topLevelDomain","currencies","languages","borders","populationSet","addingDotsPopulation","gettingCountry","toGet","element","alpha3Code","populationString","toString","populationLength","length","bPart","mPart","kPart","firstPart","slice","substr","AllCountries","countriesRef","useRef","fetch","then","res","json","current","catch","e","console","log","id","CountryDetail","useParams","undefined","specs","setSpecs","countrySpecs","join","i","CountriesApp","Provider","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.406d4ffb.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const ThemeContext = createContext(null);","import React, { useContext } from 'react';\r\nimport { ThemeContext } from '../context/ThemeContext';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport const Header = () => {\r\n\r\n    const {lightMode, setLightMode} = useContext(ThemeContext)\r\n    \r\n    const body = document.querySelector(\"body\");\r\n\r\n    const switchTheme = () => {\r\n\r\n        body.classList.toggle('dark_mode');\r\n        setLightMode(!lightMode);\r\n    }\r\n\r\n    return (\r\n        <div className=\"fixed_elements container\">\r\n            <header>\r\n                <div>\r\n                    <Link to=\"/\">\r\n                        <p>Where in the world?</p>\r\n                    </Link>\r\n\r\n                    <p\r\n                        className=\"switch_theme\"\r\n                        onClick={ switchTheme }\r\n                    >\r\n                        {\r\n                            (lightMode) \r\n                                ? <i className=\"far fa-moon\"></i> \r\n                                : <i className=\"fas fa-moon\"></i> \r\n                        } Dark mode\r\n                    </p>\r\n                </div>\r\n            </header>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useForm } from '../hook/useForm';\r\n\r\nimport { findingCountryBySearchInput, findingCountryBySelectInput } from './helpers/findingCountries';\r\n\r\nexport const Nav = ({countriesList, setCountries}) => {\r\n    \r\n    const [ formValues, handleInputChange] = useForm({\r\n        searchText: \"\",\r\n        searchContinent: \"\"\r\n    });\r\n\r\n    const { searchText, searchContinent } = formValues;\r\n\r\n    useEffect(() => {\r\n\r\n        if(searchText === \"\"){\r\n            setCountries(countriesList)\r\n        } else {\r\n            setCountries(findingCountryBySearchInput( countriesList, searchText?.toLowerCase() ));\r\n        }\r\n\r\n    }, [searchText, countriesList, setCountries])\r\n\r\n    useEffect(() => {\r\n\r\n        (searchContinent === \"\") ? setCountries(countriesList) : setCountries(findingCountryBySelectInput( countriesList, searchContinent?.toLowerCase() ));\r\n        \r\n    }, [searchContinent, countriesList, setCountries])\r\n\r\n    return (\r\n        <nav className=\"container\">\r\n            <div>\r\n                <i className=\"fas fa-search\"></i>\r\n                <input \r\n                    type=\"search\" \r\n                    placeholder=\"Search for the country...\"\r\n                    autoComplete=\"off\"\r\n                    name=\"searchText\"\r\n                    value={ searchText }\r\n                    onChange={ handleInputChange }\r\n                    />\r\n            </div>  \r\n\r\n            <select \r\n                name=\"searchContinent\"\r\n                onChange={ handleInputChange }\r\n                >\r\n                <option value=\"\">Filter by Region</option>\r\n                <option value=\"africa\">Africa</option>\r\n                <option value=\"america\">America</option>\r\n                <option value=\"asia\">Asia</option>\r\n                <option value=\"europe\">Europa</option>\r\n                <option value=\"oceania\">Oceania</option>\r\n            </select>\r\n        </nav>\r\n    )\r\n}\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (initialState) => {\r\n\r\n    const [formValues, setFormValues] = useState(initialState);\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    return [\r\n        formValues,\r\n        handleInputChange\r\n    ]\r\n}\r\n","export const findingCountryBySearchInput = (countriesList = [], searchText) => {\r\n\r\n    return countriesList.filter( country => {\r\n        const { name } = country;\r\n\r\n        return name.includes(searchText);\r\n    })\r\n}\r\n\r\nexport const findingCountryBySelectInput = (countriesList = [], searchContinent) => {\r\n\r\n    return countriesList.filter( country => {\r\n        const { region } = country;\r\n\r\n        return ( region.includes(searchContinent) )\r\n    })\r\n    \r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const CountrySmall = ({name, flag, population, region, capital}) => {\r\n    return (\r\n        <li>\r\n            <Link to={`/${name}`}>\r\n                <img alt={ name } src={flag}/>\r\n                        \r\n                <div className=\"country_specs\">\r\n                    <h3>{ name }</h3>\r\n                    <p><strong>Pupulation:</strong> { population } </p>\r\n                    <p><strong>Region:</strong> { region }</p>\r\n                    <p><strong>Capital:</strong> { capital }</p>\r\n                </div>\r\n            </Link>\r\n        </li>\r\n    )\r\n}\r\n","export const countries = [\r\n    {\r\n      \"name\": \"Afghanistan\",\r\n      \"alpha3Code\": \"AFG\"\r\n    },\r\n    {\r\n      \"name\": \"Åland Islands\",\r\n      \"alpha3Code\": \"ALA\"\r\n    },\r\n    {\r\n      \"name\": \"Albania\",\r\n      \"alpha3Code\": \"ALB\"\r\n    },\r\n    {\r\n      \"name\": \"Algeria\",\r\n      \"alpha3Code\": \"DZA\"\r\n    },\r\n    {\r\n      \"name\": \"American Samoa\",\r\n      \"alpha3Code\": \"ASM\"\r\n    },\r\n    {\r\n      \"name\": \"Andorra\",\r\n      \"alpha3Code\": \"AND\"\r\n    },\r\n    {\r\n      \"name\": \"Angola\",\r\n      \"alpha3Code\": \"AGO\"\r\n    },\r\n    {\r\n      \"name\": \"Anguilla\",\r\n      \"alpha3Code\": \"AIA\"\r\n    },\r\n    {\r\n      \"name\": \"Antarctica\",\r\n      \"alpha3Code\": \"ATA\"\r\n    },\r\n    {\r\n      \"name\": \"Antigua and Barbuda\",\r\n      \"alpha3Code\": \"ATG\"\r\n    },\r\n    {\r\n      \"name\": \"Argentina\",\r\n      \"alpha3Code\": \"ARG\"\r\n    },\r\n    {\r\n      \"name\": \"Armenia\",\r\n      \"alpha3Code\": \"ARM\"\r\n    },\r\n    {\r\n      \"name\": \"Aruba\",\r\n      \"alpha3Code\": \"ABW\"\r\n    },\r\n    {\r\n      \"name\": \"Australia\",\r\n      \"alpha3Code\": \"AUS\"\r\n    },\r\n    {\r\n      \"name\": \"Austria\",\r\n      \"alpha3Code\": \"AUT\"\r\n    },\r\n    {\r\n      \"name\": \"Azerbaijan\",\r\n      \"alpha3Code\": \"AZE\"\r\n    },\r\n    {\r\n      \"name\": \"Bahamas\",\r\n      \"alpha3Code\": \"BHS\"\r\n    },\r\n    {\r\n      \"name\": \"Bahrain\",\r\n      \"alpha3Code\": \"BHR\"\r\n    },\r\n    {\r\n      \"name\": \"Bangladesh\",\r\n      \"alpha3Code\": \"BGD\"\r\n    },\r\n    {\r\n      \"name\": \"Barbados\",\r\n      \"alpha3Code\": \"BRB\"\r\n    },\r\n    {\r\n      \"name\": \"Belarus\",\r\n      \"alpha3Code\": \"BLR\"\r\n    },\r\n    {\r\n      \"name\": \"Belgium\",\r\n      \"alpha3Code\": \"BEL\"\r\n    },\r\n    {\r\n      \"name\": \"Belize\",\r\n      \"alpha3Code\": \"BLZ\"\r\n    },\r\n    {\r\n      \"name\": \"Benin\",\r\n      \"alpha3Code\": \"BEN\"\r\n    },\r\n    {\r\n      \"name\": \"Bermuda\",\r\n      \"alpha3Code\": \"BMU\"\r\n    },\r\n    {\r\n      \"name\": \"Bhutan\",\r\n      \"alpha3Code\": \"BTN\"\r\n    },\r\n    {\r\n      \"name\": \"Bolivia (Plurinational State of)\",\r\n      \"alpha3Code\": \"BOL\"\r\n    },\r\n    {\r\n      \"name\": \"Bonaire, Sint Eustatius and Saba\",\r\n      \"alpha3Code\": \"BES\"\r\n    },\r\n    {\r\n      \"name\": \"Bosnia and Herzegovina\",\r\n      \"alpha3Code\": \"BIH\"\r\n    },\r\n    {\r\n      \"name\": \"Botswana\",\r\n      \"alpha3Code\": \"BWA\"\r\n    },\r\n    {\r\n      \"name\": \"Bouvet Island\",\r\n      \"alpha3Code\": \"BVT\"\r\n    },\r\n    {\r\n      \"name\": \"Brazil\",\r\n      \"alpha3Code\": \"BRA\"\r\n    },\r\n    {\r\n      \"name\": \"British Indian Ocean Territory\",\r\n      \"alpha3Code\": \"IOT\"\r\n    },\r\n    {\r\n      \"name\": \"United States Minor Outlying Islands\",\r\n      \"alpha3Code\": \"UMI\"\r\n    },\r\n    {\r\n      \"name\": \"Virgin Islands (British)\",\r\n      \"alpha3Code\": \"VGB\"\r\n    },\r\n    {\r\n      \"name\": \"Virgin Islands (U.S.)\",\r\n      \"alpha3Code\": \"VIR\"\r\n    },\r\n    {\r\n      \"name\": \"Brunei Darussalam\",\r\n      \"alpha3Code\": \"BRN\"\r\n    },\r\n    {\r\n      \"name\": \"Bulgaria\",\r\n      \"alpha3Code\": \"BGR\"\r\n    },\r\n    {\r\n      \"name\": \"Burkina Faso\",\r\n      \"alpha3Code\": \"BFA\"\r\n    },\r\n    {\r\n      \"name\": \"Burundi\",\r\n      \"alpha3Code\": \"BDI\"\r\n    },\r\n    {\r\n      \"name\": \"Cambodia\",\r\n      \"alpha3Code\": \"KHM\"\r\n    },\r\n    {\r\n      \"name\": \"Cameroon\",\r\n      \"alpha3Code\": \"CMR\"\r\n    },\r\n    {\r\n      \"name\": \"Canada\",\r\n      \"alpha3Code\": \"CAN\"\r\n    },\r\n    {\r\n      \"name\": \"Cabo Verde\",\r\n      \"alpha3Code\": \"CPV\"\r\n    },\r\n    {\r\n      \"name\": \"Cayman Islands\",\r\n      \"alpha3Code\": \"CYM\"\r\n    },\r\n    {\r\n      \"name\": \"Central African Republic\",\r\n      \"alpha3Code\": \"CAF\"\r\n    },\r\n    {\r\n      \"name\": \"Chad\",\r\n      \"alpha3Code\": \"TCD\"\r\n    },\r\n    {\r\n      \"name\": \"Chile\",\r\n      \"alpha3Code\": \"CHL\"\r\n    },\r\n    {\r\n      \"name\": \"China\",\r\n      \"alpha3Code\": \"CHN\"\r\n    },\r\n    {\r\n      \"name\": \"Christmas Island\",\r\n      \"alpha3Code\": \"CXR\"\r\n    },\r\n    {\r\n      \"name\": \"Cocos (Keeling) Islands\",\r\n      \"alpha3Code\": \"CCK\"\r\n    },\r\n    {\r\n      \"name\": \"Colombia\",\r\n      \"alpha3Code\": \"COL\"\r\n    },\r\n    {\r\n      \"name\": \"Comoros\",\r\n      \"alpha3Code\": \"COM\"\r\n    },\r\n    {\r\n      \"name\": \"Congo\",\r\n      \"alpha3Code\": \"COG\"\r\n    },\r\n    {\r\n      \"name\": \"Congo (Democratic Republic of the)\",\r\n      \"alpha3Code\": \"COD\"\r\n    },\r\n    {\r\n      \"name\": \"Cook Islands\",\r\n      \"alpha3Code\": \"COK\"\r\n    },\r\n    {\r\n      \"name\": \"Costa Rica\",\r\n      \"alpha3Code\": \"CRI\"\r\n    },\r\n    {\r\n      \"name\": \"Croatia\",\r\n      \"alpha3Code\": \"HRV\"\r\n    },\r\n    {\r\n      \"name\": \"Cuba\",\r\n      \"alpha3Code\": \"CUB\"\r\n    },\r\n    {\r\n      \"name\": \"Curaçao\",\r\n      \"alpha3Code\": \"CUW\"\r\n    },\r\n    {\r\n      \"name\": \"Cyprus\",\r\n      \"alpha3Code\": \"CYP\"\r\n    },\r\n    {\r\n      \"name\": \"Czech Republic\",\r\n      \"alpha3Code\": \"CZE\"\r\n    },\r\n    {\r\n      \"name\": \"Denmark\",\r\n      \"alpha3Code\": \"DNK\"\r\n    },\r\n    {\r\n      \"name\": \"Djibouti\",\r\n      \"alpha3Code\": \"DJI\"\r\n    },\r\n    {\r\n      \"name\": \"Dominica\",\r\n      \"alpha3Code\": \"DMA\"\r\n    },\r\n    {\r\n      \"name\": \"Dominican Republic\",\r\n      \"alpha3Code\": \"DOM\"\r\n    },\r\n    {\r\n      \"name\": \"Ecuador\",\r\n      \"alpha3Code\": \"ECU\"\r\n    },\r\n    {\r\n      \"name\": \"Egypt\",\r\n      \"alpha3Code\": \"EGY\"\r\n    },\r\n    {\r\n      \"name\": \"El Salvador\",\r\n      \"alpha3Code\": \"SLV\"\r\n    },\r\n    {\r\n      \"name\": \"Equatorial Guinea\",\r\n      \"alpha3Code\": \"GNQ\"\r\n    },\r\n    {\r\n      \"name\": \"Eritrea\",\r\n      \"alpha3Code\": \"ERI\"\r\n    },\r\n    {\r\n      \"name\": \"Estonia\",\r\n      \"alpha3Code\": \"EST\"\r\n    },\r\n    {\r\n      \"name\": \"Ethiopia\",\r\n      \"alpha3Code\": \"ETH\"\r\n    },\r\n    {\r\n      \"name\": \"Falkland Islands (Malvinas)\",\r\n      \"alpha3Code\": \"FLK\"\r\n    },\r\n    {\r\n      \"name\": \"Faroe Islands\",\r\n      \"alpha3Code\": \"FRO\"\r\n    },\r\n    {\r\n      \"name\": \"Fiji\",\r\n      \"alpha3Code\": \"FJI\"\r\n    },\r\n    {\r\n      \"name\": \"Finland\",\r\n      \"alpha3Code\": \"FIN\"\r\n    },\r\n    {\r\n      \"name\": \"France\",\r\n      \"alpha3Code\": \"FRA\"\r\n    },\r\n    {\r\n      \"name\": \"French Guiana\",\r\n      \"alpha3Code\": \"GUF\"\r\n    },\r\n    {\r\n      \"name\": \"French Polynesia\",\r\n      \"alpha3Code\": \"PYF\"\r\n    },\r\n    {\r\n      \"name\": \"French Southern Territories\",\r\n      \"alpha3Code\": \"ATF\"\r\n    },\r\n    {\r\n      \"name\": \"Gabon\",\r\n      \"alpha3Code\": \"GAB\"\r\n    },\r\n    {\r\n      \"name\": \"Gambia\",\r\n      \"alpha3Code\": \"GMB\"\r\n    },\r\n    {\r\n      \"name\": \"Georgia\",\r\n      \"alpha3Code\": \"GEO\"\r\n    },\r\n    {\r\n      \"name\": \"Germany\",\r\n      \"alpha3Code\": \"DEU\"\r\n    },\r\n    {\r\n      \"name\": \"Ghana\",\r\n      \"alpha3Code\": \"GHA\"\r\n    },\r\n    {\r\n      \"name\": \"Gibraltar\",\r\n      \"alpha3Code\": \"GIB\"\r\n    },\r\n    {\r\n      \"name\": \"Greece\",\r\n      \"alpha3Code\": \"GRC\"\r\n    },\r\n    {\r\n      \"name\": \"Greenland\",\r\n      \"alpha3Code\": \"GRL\"\r\n    },\r\n    {\r\n      \"name\": \"Grenada\",\r\n      \"alpha3Code\": \"GRD\"\r\n    },\r\n    {\r\n      \"name\": \"Guadeloupe\",\r\n      \"alpha3Code\": \"GLP\"\r\n    },\r\n    {\r\n      \"name\": \"Guam\",\r\n      \"alpha3Code\": \"GUM\"\r\n    },\r\n    {\r\n      \"name\": \"Guatemala\",\r\n      \"alpha3Code\": \"GTM\"\r\n    },\r\n    {\r\n      \"name\": \"Guernsey\",\r\n      \"alpha3Code\": \"GGY\"\r\n    },\r\n    {\r\n      \"name\": \"Guinea\",\r\n      \"alpha3Code\": \"GIN\"\r\n    },\r\n    {\r\n      \"name\": \"Guinea-Bissau\",\r\n      \"alpha3Code\": \"GNB\"\r\n    },\r\n    {\r\n      \"name\": \"Guyana\",\r\n      \"alpha3Code\": \"GUY\"\r\n    },\r\n    {\r\n      \"name\": \"Haiti\",\r\n      \"alpha3Code\": \"HTI\"\r\n    },\r\n    {\r\n      \"name\": \"Heard Island and McDonald Islands\",\r\n      \"alpha3Code\": \"HMD\"\r\n    },\r\n    {\r\n      \"name\": \"Holy See\",\r\n      \"alpha3Code\": \"VAT\"\r\n    },\r\n    {\r\n      \"name\": \"Honduras\",\r\n      \"alpha3Code\": \"HND\"\r\n    },\r\n    {\r\n      \"name\": \"Hong Kong\",\r\n      \"alpha3Code\": \"HKG\"\r\n    },\r\n    {\r\n      \"name\": \"Hungary\",\r\n      \"alpha3Code\": \"HUN\"\r\n    },\r\n    {\r\n      \"name\": \"Iceland\",\r\n      \"alpha3Code\": \"ISL\"\r\n    },\r\n    {\r\n      \"name\": \"India\",\r\n      \"alpha3Code\": \"IND\"\r\n    },\r\n    {\r\n      \"name\": \"Indonesia\",\r\n      \"alpha3Code\": \"IDN\"\r\n    },\r\n    {\r\n      \"name\": \"Côte d'Ivoire\",\r\n      \"alpha3Code\": \"CIV\"\r\n    },\r\n    {\r\n      \"name\": \"Iran (Islamic Republic of)\",\r\n      \"alpha3Code\": \"IRN\"\r\n    },\r\n    {\r\n      \"name\": \"Iraq\",\r\n      \"alpha3Code\": \"IRQ\"\r\n    },\r\n    {\r\n      \"name\": \"Ireland\",\r\n      \"alpha3Code\": \"IRL\"\r\n    },\r\n    {\r\n      \"name\": \"Isle of Man\",\r\n      \"alpha3Code\": \"IMN\"\r\n    },\r\n    {\r\n      \"name\": \"Israel\",\r\n      \"alpha3Code\": \"ISR\"\r\n    },\r\n    {\r\n      \"name\": \"Italy\",\r\n      \"alpha3Code\": \"ITA\"\r\n    },\r\n    {\r\n      \"name\": \"Jamaica\",\r\n      \"alpha3Code\": \"JAM\"\r\n    },\r\n    {\r\n      \"name\": \"Japan\",\r\n      \"alpha3Code\": \"JPN\"\r\n    },\r\n    {\r\n      \"name\": \"Jersey\",\r\n      \"alpha3Code\": \"JEY\"\r\n    },\r\n    {\r\n      \"name\": \"Jordan\",\r\n      \"alpha3Code\": \"JOR\"\r\n    },\r\n    {\r\n      \"name\": \"Kazakhstan\",\r\n      \"alpha3Code\": \"KAZ\"\r\n    },\r\n    {\r\n      \"name\": \"Kenya\",\r\n      \"alpha3Code\": \"KEN\"\r\n    },\r\n    {\r\n      \"name\": \"Kiribati\",\r\n      \"alpha3Code\": \"KIR\"\r\n    },\r\n    {\r\n      \"name\": \"Kuwait\",\r\n      \"alpha3Code\": \"KWT\"\r\n    },\r\n    {\r\n      \"name\": \"Kyrgyzstan\",\r\n      \"alpha3Code\": \"KGZ\"\r\n    },\r\n    {\r\n      \"name\": \"Lao People's Democratic Republic\",\r\n      \"alpha3Code\": \"LAO\"\r\n    },\r\n    {\r\n      \"name\": \"Latvia\",\r\n      \"alpha3Code\": \"LVA\"\r\n    },\r\n    {\r\n      \"name\": \"Lebanon\",\r\n      \"alpha3Code\": \"LBN\"\r\n    },\r\n    {\r\n      \"name\": \"Lesotho\",\r\n      \"alpha3Code\": \"LSO\"\r\n    },\r\n    {\r\n      \"name\": \"Liberia\",\r\n      \"alpha3Code\": \"LBR\"\r\n    },\r\n    {\r\n      \"name\": \"Libya\",\r\n      \"alpha3Code\": \"LBY\"\r\n    },\r\n    {\r\n      \"name\": \"Liechtenstein\",\r\n      \"alpha3Code\": \"LIE\"\r\n    },\r\n    {\r\n      \"name\": \"Lithuania\",\r\n      \"alpha3Code\": \"LTU\"\r\n    },\r\n    {\r\n      \"name\": \"Luxembourg\",\r\n      \"alpha3Code\": \"LUX\"\r\n    },\r\n    {\r\n      \"name\": \"Macao\",\r\n      \"alpha3Code\": \"MAC\"\r\n    },\r\n    {\r\n      \"name\": \"Macedonia (the former Yugoslav Republic of)\",\r\n      \"alpha3Code\": \"MKD\"\r\n    },\r\n    {\r\n      \"name\": \"Madagascar\",\r\n      \"alpha3Code\": \"MDG\"\r\n    },\r\n    {\r\n      \"name\": \"Malawi\",\r\n      \"alpha3Code\": \"MWI\"\r\n    },\r\n    {\r\n      \"name\": \"Malaysia\",\r\n      \"alpha3Code\": \"MYS\"\r\n    },\r\n    {\r\n      \"name\": \"Maldives\",\r\n      \"alpha3Code\": \"MDV\"\r\n    },\r\n    {\r\n      \"name\": \"Mali\",\r\n      \"alpha3Code\": \"MLI\"\r\n    },\r\n    {\r\n      \"name\": \"Malta\",\r\n      \"alpha3Code\": \"MLT\"\r\n    },\r\n    {\r\n      \"name\": \"Marshall Islands\",\r\n      \"alpha3Code\": \"MHL\"\r\n    },\r\n    {\r\n      \"name\": \"Martinique\",\r\n      \"alpha3Code\": \"MTQ\"\r\n    },\r\n    {\r\n      \"name\": \"Mauritania\",\r\n      \"alpha3Code\": \"MRT\"\r\n    },\r\n    {\r\n      \"name\": \"Mauritius\",\r\n      \"alpha3Code\": \"MUS\"\r\n    },\r\n    {\r\n      \"name\": \"Mayotte\",\r\n      \"alpha3Code\": \"MYT\"\r\n    },\r\n    {\r\n      \"name\": \"Mexico\",\r\n      \"alpha3Code\": \"MEX\"\r\n    },\r\n    {\r\n      \"name\": \"Micronesia (Federated States of)\",\r\n      \"alpha3Code\": \"FSM\"\r\n    },\r\n    {\r\n      \"name\": \"Moldova (Republic of)\",\r\n      \"alpha3Code\": \"MDA\"\r\n    },\r\n    {\r\n      \"name\": \"Monaco\",\r\n      \"alpha3Code\": \"MCO\"\r\n    },\r\n    {\r\n      \"name\": \"Mongolia\",\r\n      \"alpha3Code\": \"MNG\"\r\n    },\r\n    {\r\n      \"name\": \"Montenegro\",\r\n      \"alpha3Code\": \"MNE\"\r\n    },\r\n    {\r\n      \"name\": \"Montserrat\",\r\n      \"alpha3Code\": \"MSR\"\r\n    },\r\n    {\r\n      \"name\": \"Morocco\",\r\n      \"alpha3Code\": \"MAR\"\r\n    },\r\n    {\r\n      \"name\": \"Mozambique\",\r\n      \"alpha3Code\": \"MOZ\"\r\n    },\r\n    {\r\n      \"name\": \"Myanmar\",\r\n      \"alpha3Code\": \"MMR\"\r\n    },\r\n    {\r\n      \"name\": \"Namibia\",\r\n      \"alpha3Code\": \"NAM\"\r\n    },\r\n    {\r\n      \"name\": \"Nauru\",\r\n      \"alpha3Code\": \"NRU\"\r\n    },\r\n    {\r\n      \"name\": \"Nepal\",\r\n      \"alpha3Code\": \"NPL\"\r\n    },\r\n    {\r\n      \"name\": \"Netherlands\",\r\n      \"alpha3Code\": \"NLD\"\r\n    },\r\n    {\r\n      \"name\": \"New Caledonia\",\r\n      \"alpha3Code\": \"NCL\"\r\n    },\r\n    {\r\n      \"name\": \"New Zealand\",\r\n      \"alpha3Code\": \"NZL\"\r\n    },\r\n    {\r\n      \"name\": \"Nicaragua\",\r\n      \"alpha3Code\": \"NIC\"\r\n    },\r\n    {\r\n      \"name\": \"Niger\",\r\n      \"alpha3Code\": \"NER\"\r\n    },\r\n    {\r\n      \"name\": \"Nigeria\",\r\n      \"alpha3Code\": \"NGA\"\r\n    },\r\n    {\r\n      \"name\": \"Niue\",\r\n      \"alpha3Code\": \"NIU\"\r\n    },\r\n    {\r\n      \"name\": \"Norfolk Island\",\r\n      \"alpha3Code\": \"NFK\"\r\n    },\r\n    {\r\n      \"name\": \"Korea (Democratic People's Republic of)\",\r\n      \"alpha3Code\": \"PRK\"\r\n    },\r\n    {\r\n      \"name\": \"Northern Mariana Islands\",\r\n      \"alpha3Code\": \"MNP\"\r\n    },\r\n    {\r\n      \"name\": \"Norway\",\r\n      \"alpha3Code\": \"NOR\"\r\n    },\r\n    {\r\n      \"name\": \"Oman\",\r\n      \"alpha3Code\": \"OMN\"\r\n    },\r\n    {\r\n      \"name\": \"Pakistan\",\r\n      \"alpha3Code\": \"PAK\"\r\n    },\r\n    {\r\n      \"name\": \"Palau\",\r\n      \"alpha3Code\": \"PLW\"\r\n    },\r\n    {\r\n      \"name\": \"Palestine, State of\",\r\n      \"alpha3Code\": \"PSE\"\r\n    },\r\n    {\r\n      \"name\": \"Panama\",\r\n      \"alpha3Code\": \"PAN\"\r\n    },\r\n    {\r\n      \"name\": \"Papua New Guinea\",\r\n      \"alpha3Code\": \"PNG\"\r\n    },\r\n    {\r\n      \"name\": \"Paraguay\",\r\n      \"alpha3Code\": \"PRY\"\r\n    },\r\n    {\r\n      \"name\": \"Peru\",\r\n      \"alpha3Code\": \"PER\"\r\n    },\r\n    {\r\n      \"name\": \"Philippines\",\r\n      \"alpha3Code\": \"PHL\"\r\n    },\r\n    {\r\n      \"name\": \"Pitcairn\",\r\n      \"alpha3Code\": \"PCN\"\r\n    },\r\n    {\r\n      \"name\": \"Poland\",\r\n      \"alpha3Code\": \"POL\"\r\n    },\r\n    {\r\n      \"name\": \"Portugal\",\r\n      \"alpha3Code\": \"PRT\"\r\n    },\r\n    {\r\n      \"name\": \"Puerto Rico\",\r\n      \"alpha3Code\": \"PRI\"\r\n    },\r\n    {\r\n      \"name\": \"Qatar\",\r\n      \"alpha3Code\": \"QAT\"\r\n    },\r\n    {\r\n      \"name\": \"Republic of Kosovo\",\r\n      \"alpha3Code\": \"KOS\"\r\n    },\r\n    {\r\n      \"name\": \"Réunion\",\r\n      \"alpha3Code\": \"REU\"\r\n    },\r\n    {\r\n      \"name\": \"Romania\",\r\n      \"alpha3Code\": \"ROU\"\r\n    },\r\n    {\r\n      \"name\": \"Russian Federation\",\r\n      \"alpha3Code\": \"RUS\"\r\n    },\r\n    {\r\n      \"name\": \"Rwanda\",\r\n      \"alpha3Code\": \"RWA\"\r\n    },\r\n    {\r\n      \"name\": \"Saint Barthélemy\",\r\n      \"alpha3Code\": \"BLM\"\r\n    },\r\n    {\r\n      \"name\": \"Saint Helena, Ascension and Tristan da Cunha\",\r\n      \"alpha3Code\": \"SHN\"\r\n    },\r\n    {\r\n      \"name\": \"Saint Kitts and Nevis\",\r\n      \"alpha3Code\": \"KNA\"\r\n    },\r\n    {\r\n      \"name\": \"Saint Lucia\",\r\n      \"alpha3Code\": \"LCA\"\r\n    },\r\n    {\r\n      \"name\": \"Saint Martin (French part)\",\r\n      \"alpha3Code\": \"MAF\"\r\n    },\r\n    {\r\n      \"name\": \"Saint Pierre and Miquelon\",\r\n      \"alpha3Code\": \"SPM\"\r\n    },\r\n    {\r\n      \"name\": \"Saint Vincent and the Grenadines\",\r\n      \"alpha3Code\": \"VCT\"\r\n    },\r\n    {\r\n      \"name\": \"Samoa\",\r\n      \"alpha3Code\": \"WSM\"\r\n    },\r\n    {\r\n      \"name\": \"San Marino\",\r\n      \"alpha3Code\": \"SMR\"\r\n    },\r\n    {\r\n      \"name\": \"Sao Tome and Principe\",\r\n      \"alpha3Code\": \"STP\"\r\n    },\r\n    {\r\n      \"name\": \"Saudi Arabia\",\r\n      \"alpha3Code\": \"SAU\"\r\n    },\r\n    {\r\n      \"name\": \"Senegal\",\r\n      \"alpha3Code\": \"SEN\"\r\n    },\r\n    {\r\n      \"name\": \"Serbia\",\r\n      \"alpha3Code\": \"SRB\"\r\n    },\r\n    {\r\n      \"name\": \"Seychelles\",\r\n      \"alpha3Code\": \"SYC\"\r\n    },\r\n    {\r\n      \"name\": \"Sierra Leone\",\r\n      \"alpha3Code\": \"SLE\"\r\n    },\r\n    {\r\n      \"name\": \"Singapore\",\r\n      \"alpha3Code\": \"SGP\"\r\n    },\r\n    {\r\n      \"name\": \"Sint Maarten (Dutch part)\",\r\n      \"alpha3Code\": \"SXM\"\r\n    },\r\n    {\r\n      \"name\": \"Slovakia\",\r\n      \"alpha3Code\": \"SVK\"\r\n    },\r\n    {\r\n      \"name\": \"Slovenia\",\r\n      \"alpha3Code\": \"SVN\"\r\n    },\r\n    {\r\n      \"name\": \"Solomon Islands\",\r\n      \"alpha3Code\": \"SLB\"\r\n    },\r\n    {\r\n      \"name\": \"Somalia\",\r\n      \"alpha3Code\": \"SOM\"\r\n    },\r\n    {\r\n      \"name\": \"South Africa\",\r\n      \"alpha3Code\": \"ZAF\"\r\n    },\r\n    {\r\n      \"name\": \"South Georgia and the South Sandwich Islands\",\r\n      \"alpha3Code\": \"SGS\"\r\n    },\r\n    {\r\n      \"name\": \"Korea (Republic of)\",\r\n      \"alpha3Code\": \"KOR\"\r\n    },\r\n    {\r\n      \"name\": \"South Sudan\",\r\n      \"alpha3Code\": \"SSD\"\r\n    },\r\n    {\r\n      \"name\": \"Spain\",\r\n      \"alpha3Code\": \"ESP\"\r\n    },\r\n    {\r\n      \"name\": \"Sri Lanka\",\r\n      \"alpha3Code\": \"LKA\"\r\n    },\r\n    {\r\n      \"name\": \"Sudan\",\r\n      \"alpha3Code\": \"SDN\"\r\n    },\r\n    {\r\n      \"name\": \"Suriname\",\r\n      \"alpha3Code\": \"SUR\"\r\n    },\r\n    {\r\n      \"name\": \"Svalbard and Jan Mayen\",\r\n      \"alpha3Code\": \"SJM\"\r\n    },\r\n    {\r\n      \"name\": \"Swaziland\",\r\n      \"alpha3Code\": \"SWZ\"\r\n    },\r\n    {\r\n      \"name\": \"Sweden\",\r\n      \"alpha3Code\": \"SWE\"\r\n    },\r\n    {\r\n      \"name\": \"Switzerland\",\r\n      \"alpha3Code\": \"CHE\"\r\n    },\r\n    {\r\n      \"name\": \"Syrian Arab Republic\",\r\n      \"alpha3Code\": \"SYR\"\r\n    },\r\n    {\r\n      \"name\": \"Taiwan\",\r\n      \"alpha3Code\": \"TWN\"\r\n    },\r\n    {\r\n      \"name\": \"Tajikistan\",\r\n      \"alpha3Code\": \"TJK\"\r\n    },\r\n    {\r\n      \"name\": \"Tanzania, United Republic of\",\r\n      \"alpha3Code\": \"TZA\"\r\n    },\r\n    {\r\n      \"name\": \"Thailand\",\r\n      \"alpha3Code\": \"THA\"\r\n    },\r\n    {\r\n      \"name\": \"Timor-Leste\",\r\n      \"alpha3Code\": \"TLS\"\r\n    },\r\n    {\r\n      \"name\": \"Togo\",\r\n      \"alpha3Code\": \"TGO\"\r\n    },\r\n    {\r\n      \"name\": \"Tokelau\",\r\n      \"alpha3Code\": \"TKL\"\r\n    },\r\n    {\r\n      \"name\": \"Tonga\",\r\n      \"alpha3Code\": \"TON\"\r\n    },\r\n    {\r\n      \"name\": \"Trinidad and Tobago\",\r\n      \"alpha3Code\": \"TTO\"\r\n    },\r\n    {\r\n      \"name\": \"Tunisia\",\r\n      \"alpha3Code\": \"TUN\"\r\n    },\r\n    {\r\n      \"name\": \"Turkey\",\r\n      \"alpha3Code\": \"TUR\"\r\n    },\r\n    {\r\n      \"name\": \"Turkmenistan\",\r\n      \"alpha3Code\": \"TKM\"\r\n    },\r\n    {\r\n      \"name\": \"Turks and Caicos Islands\",\r\n      \"alpha3Code\": \"TCA\"\r\n    },\r\n    {\r\n      \"name\": \"Tuvalu\",\r\n      \"alpha3Code\": \"TUV\"\r\n    },\r\n    {\r\n      \"name\": \"Uganda\",\r\n      \"alpha3Code\": \"UGA\"\r\n    },\r\n    {\r\n      \"name\": \"Ukraine\",\r\n      \"alpha3Code\": \"UKR\"\r\n    },\r\n    {\r\n      \"name\": \"United Arab Emirates\",\r\n      \"alpha3Code\": \"ARE\"\r\n    },\r\n    {\r\n      \"name\": \"United Kingdom of Great Britain and Northern Ireland\",\r\n      \"alpha3Code\": \"GBR\"\r\n    },\r\n    {\r\n      \"name\": \"United States of America\",\r\n      \"alpha3Code\": \"USA\"\r\n    },\r\n    {\r\n      \"name\": \"Uruguay\",\r\n      \"alpha3Code\": \"URY\"\r\n    },\r\n    {\r\n      \"name\": \"Uzbekistan\",\r\n      \"alpha3Code\": \"UZB\"\r\n    },\r\n    {\r\n      \"name\": \"Vanuatu\",\r\n      \"alpha3Code\": \"VUT\"\r\n    },\r\n    {\r\n      \"name\": \"Venezuela (Bolivarian Republic of)\",\r\n      \"alpha3Code\": \"VEN\"\r\n    },\r\n    {\r\n      \"name\": \"Viet Nam\",\r\n      \"alpha3Code\": \"VNM\"\r\n    },\r\n    {\r\n      \"name\": \"Wallis and Futuna\",\r\n      \"alpha3Code\": \"WLF\"\r\n    },\r\n    {\r\n      \"name\": \"Western Sahara\",\r\n      \"alpha3Code\": \"ESH\"\r\n    },\r\n    {\r\n      \"name\": \"Yemen\",\r\n      \"alpha3Code\": \"YEM\"\r\n    },\r\n    {\r\n      \"name\": \"Zambia\",\r\n      \"alpha3Code\": \"ZMB\"\r\n    },\r\n    {\r\n      \"name\": \"Zimbabwe\",\r\n      \"alpha3Code\": \"ZWE\"\r\n    }\r\n  ]","import { countries } from \"../../data/countriesCodes\";\r\n\r\n/* This function validates data  */\r\nexport const preparingSpecs = (data) => {\r\n\r\n        return data.map((country) => {\r\n\r\n            const {name, flag, nativeName, population, \r\n                region, subregion, capital, topLevelDomain, currencies, languages, borders} = country;\r\n\r\n            \r\n            const populationSet = addingDotsPopulation( population );\r\n            \r\n            const nameSet = name.toLowerCase();\r\n\r\n            const regionSet = region.toLowerCase();\r\n\r\n            const currenciesSet = currencies.map(({name}) => name);\r\n\r\n            const langSet = languages.map(({name}) => name);\r\n    \r\n            const borderCountries = borders.map((country) => {\r\n    \r\n                return gettingCountry(country);\r\n            })\r\n            \r\n            return {\r\n                flag, nativeName, subregion, \r\n                capital, topLevelDomain,\r\n                name: nameSet, \r\n                region: regionSet,\r\n                population: populationSet,\r\n                currencies: currenciesSet, \r\n                languages: langSet, \r\n                borders: borderCountries\r\n            }        \r\n        })     \r\n}\r\n\r\nconst gettingCountry = (toGet) => {\r\n    \r\n    for( let element of countries ){\r\n\r\n        const {name, alpha3Code} = element;\r\n        \r\n        if(alpha3Code === toGet){\r\n\r\n            return name;\r\n        }\r\n    }\r\n}\r\n\r\nconst addingDotsPopulation = (population) => {\r\n\r\n    const populationString = population.toString();\r\n    const populationLength = populationString.length;\r\n\r\n    let bPart = \"\";\r\n    let mPart = \"\"; \r\n    let kPart = \"\";\r\n    let firstPart = \"\";\r\n\r\n    if( populationLength >= 10){\r\n\r\n        bPart = populationString.slice(0, (populationLength - 9));\r\n        mPart = populationString.substr((populationLength - 9), 3);\r\n        kPart = populationString.substr((populationLength - 6), 3);\r\n        firstPart = populationString.substr((populationLength - 3), 3);\r\n\r\n        return `${bPart}.${mPart}.${kPart}.${firstPart}`;\r\n    }\r\n\r\n    if( populationLength >= 7){\r\n        \r\n        mPart = populationString.slice(0, (populationLength-6));\r\n        kPart = populationString.substr((populationLength - 6), 3);\r\n        firstPart = populationString.substr((populationLength - 3), 3);\r\n\r\n        return `${mPart}.${kPart}.${firstPart}`;\r\n    }\r\n        \r\n\r\n    if( populationLength >= 4){\r\n\r\n        kPart = populationString.slice(0, (populationLength-3));\r\n        firstPart = populationString.substr((populationLength - 3), 3);\r\n\r\n        return `${kPart}.${firstPart}`;\r\n    }\r\n    \r\n    return population;\r\n}\r\n\r\n\r\n","import React, { useEffect, useRef, useState } from 'react';\r\n\r\nimport { Nav } from './Nav';\r\nimport { CountrySmall } from './CountrySmall';\r\n\r\nimport { preparingSpecs } from './helpers/preparingSpecs';\r\n\r\nexport const AllCountries = () => {\r\n\r\n    const [countries, setCountries] = useState([]);\r\n    /* We need to use Reference to be passed to Nav, since modifying it can cause render issues*/\r\n    const countriesRef = useRef()\r\n\r\n    useEffect(() => {\r\n\r\n        fetch('https://restcountries.eu/rest/v2/all')\r\n            .then(res => res.json())\r\n            .then(countries => {\r\n\r\n                countriesRef.current = preparingSpecs(countries);\r\n                setCountries(preparingSpecs(countries));\r\n            })\r\n            .catch(e => console.log(e));\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Nav \r\n                countriesList={ countriesRef.current } \r\n                setCountries={ setCountries } />\r\n\r\n            <article className=\"container\">\r\n                {\r\n                    countries &&\r\n                        countries.map( ({name, flag, capital, region, population }, id) => (\r\n                            <CountrySmall\r\n                                key={id}\r\n                                name={name}\r\n                                flag={flag}\r\n                                capital={capital}\r\n                                region={region}\r\n                                population={population}\r\n                            />)\r\n                        )\r\n                }\r\n            </article>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\nimport { preparingSpecs } from './helpers/preparingSpecs';\r\n\r\nexport const CountryDetail = () => {\r\n\r\n    const {country} = useParams();\r\n    const [specs, setSpecs] = useState([{\r\n        name: undefined, flag: undefined, nativeName:undefined, population:undefined, region:undefined, \r\n        subregion: undefined, capital:undefined, topLevelDomain:undefined, \r\n        currencies: undefined, languages:undefined, borders:undefined}]);\r\n    \r\n    const [{ name, flag, nativeName, population, region, subregion, \r\n        capital, topLevelDomain, currencies, languages, borders }] = specs;\r\n        \r\n    useEffect(() => {\r\n    \r\n        fetch(`https://restcountries.eu/rest/v2/name/${country}`)\r\n            .then( data => data.json())\r\n            .then( countrySpecs => {\r\n                \r\n                setSpecs((preparingSpecs(countrySpecs)))\r\n            })\r\n            .catch(e => console.log(e));\r\n            \r\n    }, [country]);\r\n\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <Link to=\"/AllCountries\">\r\n                <button> <span>&#8592;</span> Back</button>\r\n            </Link>\r\n            \r\n            {\r\n                name && \r\n                    <div className=\"country_detail\">\r\n                        <div>\r\n                            <img alt={ name } src={ flag } />\r\n                        </div>\r\n                        <div className=\"country_specs\">\r\n                            <h2> { name } </h2>\r\n\r\n                            <div>\r\n                                <div>\r\n                                    <p><strong>Native name:</strong> { nativeName }</p>\r\n                                    <p><strong>Population:</strong> { population } </p>\r\n                                    <p><strong>Region:</strong> { region }</p>\r\n                                    <p><strong>Sub Region:</strong> { subregion } </p>\r\n                                    <p><strong>Capital:</strong> { capital } </p>\r\n                                </div>\r\n                                <div>\r\n                                    <p>\r\n                                        <strong>Top Level Domain: </strong> \r\n                                        { topLevelDomain.join(\" - \") } \r\n                                    </p>\r\n                                    <p>\r\n                                        <strong>Currencies: </strong> \r\n                                        { currencies.join(\", \") } \r\n                                    </p>\r\n                                    <p>\r\n                                        <strong>Languages: </strong> \r\n                                        { languages.join(\", \")}\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div className=\"border_countries\"> \r\n                                <p><strong>Border Countries: </strong></p>\r\n                                <div>\r\n                                {\r\n                                    borders.map((country, i) => (\r\n                                        <Link \r\n                                            to={`/${country}`}\r\n                                            key={ i }>\r\n                                            <span> \r\n                                                { country } \r\n                                            </span>\r\n                                        </Link>\r\n                                    ))\r\n                                }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            }   \r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n  } from \"react-router-dom\";\r\nimport { Header } from './components/Header';\r\nimport { AllCountries } from './components/AllCountries';\r\nimport { CountryDetail } from './components/CountryDetail';\r\n\r\n\r\nimport { ThemeContext } from './context/ThemeContext';\r\n\r\nimport './styles/main.scss';\r\n\r\nexport const CountriesApp = () => {\r\n\r\n    const [lightMode, setLightMode] = useState(true);\r\n\r\n    return (\r\n        <ThemeContext.Provider value={{ lightMode, setLightMode}}>\r\n            <Router>\r\n\r\n                <Header/>\r\n\r\n                <Switch>\r\n                    <Route path=\"/AllCountries\" component={ AllCountries} />\r\n\r\n                    <Route path=\"/:country\" component={ CountryDetail } />\r\n\r\n                    <Route path=\"/\" component={ AllCountries } />\r\n                </Switch>\r\n\r\n            </Router>\r\n        </ThemeContext.Provider>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CountriesApp } from './CountriesApp';\r\n\r\nReactDOM.render(\r\n    <CountriesApp/>,\r\n    document.getElementById(\"root\")\r\n)"],"sourceRoot":""}